version: '3.8'

services:
  api:
    container_name: api_blog_allowme
    build:
      dockerfile: Dockerfile
      context: .
      target: development
    env_file:
      - .env
    environment:
      DB_USER_DEV: ${DB_USER_DEV}
      DB_PASS_DEV: ${DB_PASS_DEV}
      DB_NAME_DEV:  ${DB_NAME_DEV}
      DB_HOST_DEV: postgres
      DB_PORT_DEV: 5432
      DB_DIALECT: postgres
    volumes:
      - ./src:/app/src
      - /usr/app/src/node_modules
    command: npm run start:dev
    ports:
      - 3001:3001
    depends_on:
      - postgres

  postgres:
    image: postgres:latest
    container_name: meu-postgres-container-2
    environment:
      POSTGRES_DB: ${DB_NAME_DEV}
      POSTGRES_USER: ${DB_USER_DEV}
      POSTGRES_PASSWORD: ${DB_PASS_DEV}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  pgadmin:
    container_name: pgadmin
    image: "dpage/pgadmin4:6.10"
    environment:
      PGADMIN_DEFAULT_EMAIL: "admin@mail.com"
      PGADMIN_DEFAULT_PASSWORD: "admin"
      PGADMIN_CONFIG_SERVER_MODE: "False"
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: "False"
    volumes:
      - pgadmin:/var/lib/pgadmin
      - ./docker_pgadmin_servers.json:/pgadmin4/servers.json
    ports:
      - "5433:80"
    entrypoint:
      - "/bin/sh"
      - "-c"
      - "/bin/echo 'postgres:5432:*:postgres:password' > /tmp/pgpassfile && chmod 600 /tmp/pgpassfile && /entrypoint.sh"
    restart: unless-stopped

volumes:
  postgres_data:
  pgadmin:

networks:
  my_network: